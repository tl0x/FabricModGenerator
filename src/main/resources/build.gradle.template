<#if (loomVersion.originalIndex <= 9)>
    <#assign depType="Compile">
		<#assign combat="1_8">
<#else>
    <#assign depType="Implementation">
		<#assign combat="16">
</#if>

plugins {
	id 'fabric-loom' version '${loomVersion}'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_${combat}
targetCompatibility = JavaVersion.VERSION_${combat}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group



dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${r"${project.minecraft_version}"}"
	mappings "net.fabricmc:yarn:${r"${project.yarn_mappings}"}<#if yarnVersion.hasV2Mappings && (loomVersion.originalIndex >= 11)>:v2</#if>"
	mod${depType} "net.fabricmc:fabric-loader:${r"${project.loader_version}"}"
<#if fabricApi>

	mod${depType} "${apiVersion.mavenLocation}:${r"${project.fabric_api_version}"}"
</#if>
}

<#if (loomVersion.originalIndex <= 9)>
processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}
<#else>
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}
</#if>

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${r"${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"}"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}